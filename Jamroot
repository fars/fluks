# Usage:
#
#  bjam [OPTIONS] [PROPERTIES] [release|debug] [install]
#
#  Build and install fluks.
#
# Targets and Related Options:
#
#   install                 Install to the configured locations (below).
#   =======
#
#   --prefix=<PREFIX>       Install architecture independent files here.
#                           [default=/usr/local]
#
#   --exec-prefix=<EPREFIX> Install architecture dependent files here.
#                           [default=<PREFIX>]

# above comment shows up with `bjam --help'
# other available options:

#   --libdir=<DIR>          Install library files here.
#                           Default: <EPREFIX>/lib
#
#   --includedir=<HDRDIR>   Install header files here.
#                           Default: <PREFIX>/include

import package ;
import testing ;

using gcc
	: # compiler version
	: # c++ compile command
	: # c++ cannot use -pedantic as <tr1/*> headers are needed
	<cxxflags>"-std=c++98"
	<cflags>"-std=c99 -pedantic"
	;
lib boost_filesystem-mt ;
lib boost_program_options-mt ;
lib boost_regex ;
lib boost_system ;
lib crypto ;
lib devmapper ;
lib ssl ;
lib udev ;
lib uuid ;
lib fluks_crypto
	: serpent.cpp
	cast6.c tiger.c twofish.c whirlpool.c

	boost_system

	# -D_BSD_SOURCE needed for proper endian macros
	: <define>_BSD_SOURCE
	<variant>release:<define>NDEBUG
	# commented out until no asserts ever fire ever in the program; they
	# don't but then I'm the only user
	#<variant>release:<define>NASSERT
	<variant>debug:<define>DEBUG
	;
exe fluks
	: af.cpp backup.cpp cipher.cpp cipher_spec.cpp crypt.cpp
	detect.cpp dm.cpp errors.cpp fluks.cpp
	hash.cpp hmac.cpp luks.cpp os.cpp pbkdf2.cpp
	support.cpp

	boost_filesystem-mt
	boost_program_options-mt
	boost_regex
	boost_system
	crypto
	devmapper
	ssl
	udev
	uuid

	# internal lib
	fluks_crypto

	: <define>_BSD_SOURCE
	<variant>release:<define>NDEBUG
	#<variant>release:<define>NASSERT
	<variant>debug:<define>DEBUG

	# completely static linking
	<link>static
	<runtime-link>static
	<threading>multi
	;
exe run_test
	: run_test.cpp
	cipher.cpp crypt.cpp detect.cpp errors.cpp hash.cpp hmac.cpp
	support.cpp

	# external libs
	boost_regex
	boost_system
	ssl

	# internal lib
	fluks_crypto

	: <define>_BSD_SOURCE
	<variant>release:<define>NDEBUG
	#<variant>release:<define>NASSERT
	<variant>debug:<define>DEBUG
	;

obj test/cast6_t.o : cast6.c : <define>CAST6_TEST <define>_BSD_SOURCE ;

unit-test test/cast6
	: test/cast6.cpp test/cast6_t.o boost_regex
	: <testing.arg>test
	;
unit-test test/serpent
	: test/serpent.cpp boost_regex fluks_crypto
	: <testing.arg>test
	;
unit-test test/tiger : test/tiger.cpp boost_system fluks_crypto ;
unit-test test/twofish
	: test/twofish.cpp boost_regex fluks_crypto
	: <testing.arg>test
	;
unit-test test/whirlpool : test/whirlpool.cpp boost_system fluks_crypto ;

install dist
	: fluks

	: <variant>release:<location>release
	<variant>debug:<location>debug
	;

package.install install
	: # properties
	: fluks
	: # libraries
	: # headers
	;
